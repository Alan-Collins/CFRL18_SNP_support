#!/usr/bin/env python3

# AUTHOR		:	ALAN COLLINS
# VERSION		:	v1
# DATE			:	2021-1-5
# DESCRIPTION	:	Script to plot histograms of the coverage and consensus score of all SNPs in a SNP support file generated by my get_read_info_at_pos.py script.

import sys
import os
import argparse
import matplotlib.pyplot as plt


parser = argparse.ArgumentParser(
	description="Plot histograms of the coverage and consensus score of all SNPs in a SNP support file generated by my get_read_info_at_pos.py script. takes an input directory and output directory and makes coverage and consensus score plots for each file in the input directory.")
parser.add_argument(
	"-i", dest="indir", required = True,
	help="Path to input directory."
	)
parser.add_argument(
	"-o", dest="outdir", required = True,
	help="Path to output directory."
	)


args = parser.parse_args(sys.argv[1:])

indir = args.indir + '/' if args.indir[-1] != '/' else args.indir
outdir = args.outdir + '/' if args.outdir[-1] != '/' else args.outdir

for file in os.listdir(indir):
	infile = indir + file

	out_cov_hist = outdir + file[:-3] + "coverage_hist.png"
	out_score_hist = outdir + file[:-3] + "consensus_score_hist.png"


	cov_list = []
	score_list = []

	with open(infile, 'r') as fin:
		for line in fin.readlines()[1:]:
			bits = line.split()
			cov_list.append(int(bits[8]))
			score_list.append(float(bits[9]))

	plt.rcParams.update({'font.size': 7})
	fig, ax = plt.subplots()
	fig.set_size_inches(10, 5)
	ax.hist(cov_list, density=False, bins=100)
	plt.title("Histogram of distribution of read coverage for SNPs for {}".format(file[:-3]))
	plt.xticks(range(0, max(cov_list)+10, 10))
	plt.savefig(out_cov_hist, dpi=300)
	plt.close()

	plt.rcParams.update({'font.size': 7})
	fig, ax = plt.subplots()
	fig.set_size_inches(10, 5)
	ax.hist(score_list, density=False, bins=100)
	plt.title("Histogram of distribution of consensus scores for SNPs for {}".format(file[:-3]))
	plt.xticks([0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1])
	plt.savefig(out_score_hist, dpi=300)
	plt.close()
